<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="EasyEncounters.Views.EncounterDamageTabPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyEncounters.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:helpers="using:EasyEncounters.Helpers"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <helpers:EnumToStringConverter x:Key="EnumToStringConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!--Source Creature Info-->
        <StackPanel Orientation="Vertical"
                    Grid.Row="0"
                    Grid.Column="0">
            <TextBlock Margin="2"
                       Text="{x:Bind ViewModel.SourceCreature.Creature.EncounterName, Mode=OneWay}"/>
            <!--Source ability:-->
            <Expander HorizontalAlignment="Stretch"
                      Visibility="{x:Bind ViewModel.HasSelectedAbility, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <Expander.Header>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{x:Bind ViewModel.SelectedAbility.Name}"
                                                   FontWeight="Medium"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.ActionSpeed, Converter={StaticResource EnumToStringConverter}}"
                                                   FontSize="10"
                                                   Margin="0,0,0,0"/>
                            <TextBlock Text="Concentration"
                                                       FontSize="10"
                                                       Margin="10,0,0,0"
                                                       Visibility="{x:Bind ViewModel.SelectedAbility.Concentration, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.SpellLevel, Converter={StaticResource EnumToStringConverter}}"
                                                       Margin="10,0,0,0"
                                                       FontSize="10"
                                                       Visibility="{x:Bind ViewModel.SelectedAbility.IsSpell, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.Resolution, Converter={StaticResource EnumToStringConverter}}"
                                                       Margin="10,0,0,0"
                                                       FontSize="10"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.SaveType}"
                                                                              Margin="5,0,0,0"
                                       FontSize="10"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.ResolutionValue}"
                                       Margin="5,0,0,0"
                                       FontSize="10"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.SelectedAbility.SpellCastComponents}"
                                                       FontStyle="Italic"
                                                       FontSize="10"
                                       Visibility="{x:Bind ViewModel.SelectedAbility.IsSpell, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.TargetDistance}"
                                                       Visibility="{x:Bind ViewModel.SelectedAbility.NeedsRangeValue, Converter={StaticResource BoolToVisibilityConverter}}"
                                                       FontSize="10"
                                                       Margin="2"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.TargetDistanceType, Converter={StaticResource EnumToStringConverter}}"
                                                       FontSize="10"
                                                       Margin="2"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.TargetSize}"
                                                       FontSize="10"
                                                       Margin="2"
                                                       Visibility="{x:Bind ViewModel.SelectedAbility.NeedsArea, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedAbility.TargetAreaType}"
                                                       FontSize="10"
                                                       Margin="2"
                                                       Visibility="{x:Bind ViewModel.SelectedAbility.NeedsArea, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </StackPanel>
                    </StackPanel>
                </Expander.Header>
                <Expander.Content>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.SelectedAbility.EffectDescription}"
                                       TextWrapping="Wrap"/>
                    </StackPanel>
                </Expander.Content>
            </Expander>
            <!--todo: reaction etc info?-->
        </StackPanel>
        <StackPanel Grid.Row="1">
        <ListView 
                  x:Name="SelectableTargets"
                  Grid.Column="0"
                  ItemsSource="{x:Bind ViewModel.SelectableCreatures}"
                  Margin="2"
                  SelectionMode="Multiple">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="SelectionChanged">
                    <Core:InvokeCommandAction Command="{x:Bind ViewModel.SelectionChangedCommand}" CommandParameter="{x:Bind SelectableTargets.SelectedItems, Mode=OneWay}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Add Selected Targets"
                                                Command="{Binding AddTargetRequestedCommand}"/>
                            </MenuFlyout>
                        </StackPanel.ContextFlyout>
                        <TextBlock Margin="2"
                                   Text="{Binding Creature.EncounterName}"/>
                        <TextBlock Margin="2"
                                   Text="{Binding CurrentHP, Mode=OneWay}"/>
                        <!--better creature display-->
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
            <Button Grid.Column="1"
                Grid.Row="0"
                Command="{x:Bind ViewModel.DealDamageCommand}"
                Content="Deal Damage"/>
        </StackPanel>
        <!--Damage Type and Volume Selection-->
        <StackPanel Orientation="Vertical" Grid.Column="1">
            <NumberBox Text="{x:Bind ViewModel.Damage, Mode=TwoWay}"
                  Header="Damage Value:"
                  Margin="2"
                  AcceptsExpression="False"
                  Minimum="0"/>
            <ComboBox Name="selectDamageType"
                  VerticalAlignment="Stretch"
                  ItemsSource="{x:Bind ViewModel.DamageTypes}"
                  SelectedItem="{x:Bind ViewModel.SelectedDamageType, Mode=TwoWay}"
                  PlaceholderText="Select a Damage Type"
                  HorizontalContentAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                  Margin="2"/>
        </StackPanel>
        <!--Selected Targets-->
        <ScrollViewer Grid.Row="1"
                      Grid.Column="2"
                      MaxHeight="600">
            <ListView Name="SelectedTargets"
                      ItemsSource="{x:Bind ViewModel.Targets, Mode=OneWay}"
                      Margin="2,2,2,2">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <StackPanel.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Remove"
                                                    Command="{Binding RemoveTargetRequestedCommand}"/>
                                </MenuFlyout>
                            </StackPanel.ContextFlyout>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding ActiveEncounterCreatureViewModel.Creature.Name}"
                                           FontSize="30"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Content="Reaction"
                                              Margin="2"
                                              IsChecked="{Binding ActiveEncounterCreatureViewModel.Reaction, Mode=TwoWay}"/>
                                <ToggleButton Content="Concentrating"
                                              Margin="2"
                                              IsChecked="{Binding ActiveEncounterCreatureViewModel.Concentrating, Mode=TwoWay}"/>    
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Armour Class:"
                       FontWeight="Medium"
                                 Margin="2"/>
                                <TextBlock Text="{Binding ActiveEncounterCreatureViewModel.Creature.AC}"
                                 Margin="2"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Hit Points:"
                       FontWeight="Medium"
                                 Margin="2"/>
                                <TextBlock Text="{Binding ActiveEncounterCreatureViewModel.CurrentHP, Mode=OneWay}"
                                 Margin="2"/>
                                <TextBlock Text="/" Margin="2"/>
                                <TextBlock Text="{Binding ActiveEncounterCreatureViewModel.Creature.EncounterMaxHP}"
                           Margin="2"/>
                            </StackPanel>
                            <ComboBox Name="selectDamageVolume"
                                      Header="Damage Taken Multiplier:"
                                      Grid.Column="3"
                                      Grid.ColumnSpan="4"
                                      Grid.Row="2"
                                      Grid.RowSpan="2"
                                      ItemsSource="{Binding DamageVolumes}"
                                      SelectedItem="{Binding SelectedDamageVolume, Mode=TwoWay}">
                            </ComboBox>
                        </StackPanel>
                        <!--<Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Remove"
                                                    Command="{Binding RemoveTargetRequestedCommand}"/>
                            </MenuFlyout>
                        </Grid.ContextFlyout>
                        <TextBlock Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="7"
                                       Text="{Binding ActiveEncounterCreatureViewModel.Creature.Name}"
                                       Margin="2,2,2,2"
                                       FontSize="30"/>
                        <TextBlock Grid.Row="1"
                                       Grid.Column="2"
                                       Margin="2,2,2,2"
                                       Text="{Binding ActiveEncounterCreatureViewModel.CurrentHP, Mode=OneWay}"/>
                        <TextBlock Grid.Row="1"
                                       Grid.Column="3"
                                       Margin="2,2,2,2"
                                       Text="/"/>
                        <TextBlock Grid.Row="1"
                                       Grid.Column="4"
                                       Margin="2,2,2,2"
                                       Text="{Binding ActiveEncounterCreatureViewModel.Creature.EncounterMaxHP}"/>
                        <TextBlock Grid.Row="1"
                                       Grid.Column="5"
                                       Margin="2,2,2,2"
                                       Text="AC:"/>
                        <TextBlock Grid.Row="1"
                                       Grid.Column="6"
                                       Margin="2,2,2,2"
                                       Text="{Binding ActiveEncounterCreatureViewModel.Creature.AC}"/>
                        <ToggleButton Grid.Row="2"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      Margin="2,2,2,2"
                                      IsChecked="{Binding ActiveEncounterCreatureViewModel.Reaction}"
                                      Content="Reaction?"></ToggleButton>
                        <ToggleButton Grid.Row="3"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      Margin="2,2,2,2"
                                      IsChecked="{Binding ActiveEncounterCreatureViewModel.Concentrating}"
                                      Content="Concentrating?"/>
                        <ComboBox Name="selectDamageVolume"
                                      Header="Damage Taken Multiplier:"
                                      Grid.Column="3"
                                      Grid.ColumnSpan="4"
                                      Grid.Row="2"
                                      Grid.RowSpan="2"
                                      ItemsSource="{Binding DamageVolumes}"
                                      SelectedItem="{Binding SelectedDamageVolume, Mode=TwoWay}">
                        </ComboBox>
                    </Grid>-->
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>

    </Grid>
</Page>
