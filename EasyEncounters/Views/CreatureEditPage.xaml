<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="EasyEncounters.Views.CreatureEditPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EasyEncounters.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:helpers="using:EasyEncounters.Helpers"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="IsNPCConverter"/>
            <helpers:EnumToStringConverter x:Key="EnumToStringConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <ScrollViewer>
            <StackPanel Orientation="Vertical" >
                <StackPanel Orientation="Horizontal"
                            BorderThickness="2"
                            CornerRadius="10"
                            Padding="12"
                            BorderBrush="BlanchedAlmond">
                    <TextBox Text="{x:Bind ViewModel.Creature.Name, Mode=TwoWay}"
                              Margin="2,2,2,2"
                             Header="Creature Name"
                             PlaceholderText="Enter a name for the Creature"/>
                    <NumberBox Value="{x:Bind ViewModel.LevelCR, Mode=TwoWay}"
                             Header="Creature Level or CR"
                             Margin="2,2,2,2"
                             AcceptsExpression="True"
                             ValidationMode="InvalidInputOverwritten"
                             Minimum="0"
                             Maximum="30"/>
                    <TextBox Text="{x:Bind ViewModel.Creature.Hyperlink, Mode=TwoWay}"
                             Header="URI:"
                             Margin="2,2,2,2"
                             InputScope="Number"/>
                    <HyperlinkButton NavigateUri="{x:Bind ViewModel.Creature.Hyperlink, Mode=OneWay}" 
                                     VerticalAlignment="Bottom">
                        <FontIcon Glyph="&#xF6FA;"/>
                    </HyperlinkButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            BorderThickness="2"
                            CornerRadius="10"
                            Padding="12"
                            BorderBrush="BlanchedAlmond">
                    <TextBlock Text="AC:" Margin="2,2,2,2"/>
                    <NumberBox Value="{x:Bind ViewModel.Creature.AC, Mode=TwoWay}"
                             Margin="2,2,2,2"
                               AcceptsExpression="True"
                               Minimum="0"
                               Maximum="40"
                              ValidationMode="InvalidInputOverwritten"/>
                             <!--InputScope="Number"
                             TextChanging="OnTextChanging"-->

                    <TextBlock Text="Proficiency:" Margin="2,2,2,2"/>
                    <NumberBox Value="{x:Bind ViewModel.Creature.ProficiencyBonus, Mode=TwoWay}"
                             Margin="2,2,2,2" 
                             x:DefaultBindMode="TwoWay"
                               AcceptsExpression="True"
                               Minimum="2"
                               Maximum="20"
                              ValidationMode="InvalidInputOverwritten"/>
                    <TextBlock Text="Initiative Bonus:"  Margin="2,2,2,2"/>
                    <NumberBox Value="{x:Bind ViewModel.Creature.InitiativeBonus, Mode=TwoWay}"  Margin="2,2,2,2" x:DefaultBindMode="TwoWay" 
                               AcceptsExpression="True"
                               Minimum="0"
                               Maximum="20"
                              ValidationMode="InvalidInputOverwritten"/>
                    <ToggleButton IsChecked="{x:Bind ViewModel.Creature.InitiativeAdvantage}" Content ="Has Advantage for Initiative?" x:DefaultBindMode="TwoWay"  Margin="2,2,2,2"/>

                </StackPanel>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Strength:"
                                   Value="{x:Bind ViewModel.Creature.Strength, Mode=TwoWay}"/>
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Dexterity:"
                                   Value="{x:Bind ViewModel.Creature.Dexterity, Mode=TwoWay}"/>
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Constitution:"
                                   Value="{x:Bind ViewModel.Creature.Constitution, Mode=TwoWay}"/>
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Intelligence:"
                                   Value="{x:Bind ViewModel.Creature.Intelligence, Mode=TwoWay}"/>
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Wisdom:"
                                   Value="{x:Bind ViewModel.Creature.Wisdom, Mode=TwoWay}"/>
                        <NumberBox Minimum="0"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Charisma:"
                                   Value="{x:Bind ViewModel.Creature.Charisma, Mode=TwoWay}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Strength Save:"
                                   Value="{x:Bind ViewModel.Creature.StrengthSave, Mode=TwoWay}"/>
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Dexterity Save:"
                                   Value="{x:Bind ViewModel.Creature.DexteritySave, Mode=TwoWay}"/>
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Constitution Save:"
                                   Value="{x:Bind ViewModel.Creature.ConstitutionSave, Mode=TwoWay}"/>
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Intelligence Save:"
                                   Value="{x:Bind ViewModel.Creature.IntelligenceSave, Mode=TwoWay}"/>
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Wisdom Save:"
                                   Value="{x:Bind ViewModel.Creature.WisdomSave, Mode=TwoWay}"/>
                        <NumberBox Minimum="-5"
                                   Maximum="30"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="Charisma Save:"
                                   Value="{x:Bind ViewModel.Creature.CharismaSave, Mode=TwoWay}"/>
                    </StackPanel>
                    <ComboBox Header="Spell Casting Stat:"
                              Margin="5"
                              ItemsSource="{x:Bind ViewModel.StatTypes}"
                              SelectedItem="{x:Bind ViewModel.Creature.SpellStat, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Expander Header="Spell Slots:"
                              Margin="5">
                        <Expander.Content>
                            <VariableSizedWrapGrid MaximumRowsOrColumns="9"
                                                   ItemWidth="100"
                                                   Orientation="Horizontal">
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="1st Level"
                                   Value="{x:Bind ViewModel.SpellSlots.FirstLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="2nd Level"
                                   Value="{x:Bind ViewModel.SpellSlots.SecondLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="3rd Level"
                                   Value="{x:Bind ViewModel.SpellSlots.ThirdLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="4th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.FourthLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="5th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.FifthLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="6th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.SixthLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="7th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.SeventhLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="8th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.EighthLevel, Mode=TwoWay}"/>
                                <NumberBox Minimum="0"
                                   Maximum="10"
                                   AcceptsExpression="False"
                                   Margin="2"
                                   Header="9th Level"
                                   Value="{x:Bind ViewModel.SpellSlots.NinthLevel, Mode=TwoWay}"/>
                            </VariableSizedWrapGrid>
                        </Expander.Content>
                    </Expander>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            BorderThickness="2"
                            CornerRadius="10"
                            Padding="12"
                            BorderBrush="BlanchedAlmond">
                    <TextBox Header="Movement:"
                             PlaceholderText="Enter a movement string"
                             Margin="5"
                             Text="{x:Bind ViewModel.Creature.Movement, Mode=TwoWay}"/>
                    <ToggleButton IsChecked="{x:Bind ViewModel.Creature.DMControl}" Content="Is an NPC?" x:DefaultBindMode="TwoWay"/>
                    <TextBlock Text="Max HP (fixed):" Margin="2,2,2,2" 
                               Visibility="{x:Bind ViewModel.Creature.DMControl, Mode=OneWay, Converter={StaticResource IsNPCConverter}}"/>
                    <NumberBox Value="{x:Bind ViewModel.Creature.MaxHP, Mode=TwoWay}"
                            Margin="2,2,2,2"
                              AcceptsExpression="True"
                               Minimum="0"
                               Maximum="10000"
                              ValidationMode="InvalidInputOverwritten"
                             Visibility="{x:Bind ViewModel.Creature.DMControl, Mode=OneWay, Converter={StaticResource IsNPCConverter}}"></NumberBox>
                    <TextBlock Text="Max HP dicestring:" Margin="2,2,2,2"
                               Visibility="{x:Bind ViewModel.Creature.DMControl, Mode=OneWay, Converter={StaticResource IsNPCConverter}}"/>
                    <TextBox Text="{x:Bind ViewModel.Creature.MaxHPString, Mode=TwoWay}"
                             Visibility="{x:Bind ViewModel.Creature.DMControl, Mode=OneWay, Converter={StaticResource IsNPCConverter}}"
                            Margin="2,2,2,2"></TextBox>
                </StackPanel>

                <Expander Margin="5"
                          HorizontalAlignment="Stretch">
                    <Expander.Header>
                        <StackPanel>
                            <TextBlock Margin="2"
                                       Text="Resistances:"/>
                            <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.Resists.EnumString, Mode=OneWay}"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander.Header>
                    <VariableSizedWrapGrid Orientation="Horizontal"
                                           MaximumRowsOrColumns="5"
                                           ItemWidth="200">
                        <ToggleButton Grid.Row="0" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Resists.Acid}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Acid"/>
                        <ToggleButton Grid.Row="0" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Resists.Bludgeoning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Bludgeoning"/>
                        <ToggleButton Grid.Row="0" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Resists.Cold}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Cold"/>
                        <ToggleButton Grid.Row="0" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Resists.Fire}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Fire"/>
                        <ToggleButton Grid.Row="0" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Resists.Force}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Force"/>
                        <ToggleButton Grid.Row="1" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Resists.Lightning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Lightning"/>
                        <ToggleButton Grid.Row="1" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Resists.Necrotic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Necrotic"/>
                        <ToggleButton Grid.Row="1" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Resists.Piercing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Piercing"/>
                        <ToggleButton Grid.Row="1" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Resists.Poison}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Poison"/>
                        <ToggleButton Grid.Row="1" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Resists.Psychic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Psychic"/>
                        <ToggleButton Grid.Row="2" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Resists.Radiant}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Radiant"/>
                        <ToggleButton Grid.Row="2" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Resists.Slashing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Slashing"/>
                        <ToggleButton Grid.Row="2" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Resists.Thunder}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Thunder"/>
                        <ToggleButton Grid.Row="2" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Resists.NonSilveredPhysical}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Non-Silvered Physical"/>
                        <ToggleButton Grid.Row="2" Grid.Column="4"
                                  Content="Non-Magical Physical"
                                  IsChecked="{x:Bind ViewModel.Resists.NonMagicalPhysical}"
                                  x:DefaultBindMode="TwoWay"/>
                    </VariableSizedWrapGrid>
                </Expander>
                <Expander Margin="5"
                           HorizontalAlignment="Stretch">
                    <Expander.Header>
                        <StackPanel>
                            <TextBlock Margin="2"
                                       Text="Immunities:"/>
                            <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.Immunities.EnumString, Mode=OneWay}"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <VariableSizedWrapGrid MaximumRowsOrColumns="5"
                                                   Orientation="Horizontal"
                                                   ItemWidth="200">
                            <ToggleButton Grid.Row="0" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Immunities.Acid}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Acid"/>
                            <ToggleButton Grid.Row="0" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Immunities.Bludgeoning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Bludgeoning"/>
                            <ToggleButton Grid.Row="0" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Immunities.Cold}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Cold"/>
                            <ToggleButton Grid.Row="0" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Immunities.Fire}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Fire"/>
                            <ToggleButton Grid.Row="0" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Immunities.Force}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Force"/>
                            <ToggleButton Grid.Row="1" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Immunities.Lightning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Lightning"/>
                            <ToggleButton Grid.Row="1" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Immunities.Necrotic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Necrotic"/>
                            <ToggleButton Grid.Row="1" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Immunities.Piercing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Piercing"/>
                            <ToggleButton Grid.Row="1" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Immunities.Poison}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Poison"/>
                            <ToggleButton Grid.Row="1" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Immunities.Psychic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Psychic"/>
                            <ToggleButton Grid.Row="2" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Immunities.Radiant}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Radiant"/>
                            <ToggleButton Grid.Row="2" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Immunities.Slashing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Slashing"/>
                            <ToggleButton Grid.Row="2" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Immunities.Thunder}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Thunder"/>
                            <ToggleButton Grid.Row="2" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Immunities.NonSilveredPhysical}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Non-Silvered Physical"/>
                            <ToggleButton Grid.Row="2" Grid.Column="4"
                                  Content="Non-Magical Physical"
                                  x:DefaultBindMode="TwoWay"
                                  IsChecked="{x:Bind ViewModel.Immunities.NonMagicalPhysical}"/>
                        </VariableSizedWrapGrid>
                    </Expander.Content>
                </Expander>
                <Expander Margin="5"
                           HorizontalAlignment="Stretch">
                    <Expander.Header>
                        <StackPanel>
                            <TextBlock Margin="2"
                                       Text="Vulnerabilities:"/>
                            <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.Vulnerabilities.EnumString, Mode=OneWay}"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander.Header>
                    <VariableSizedWrapGrid Orientation="Horizontal"
                                               MaximumRowsOrColumns="5"
                                               ItemWidth="200">
                        <ToggleButton Grid.Row="0" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Acid}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Acid"/>
                        <ToggleButton Grid.Row="0" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Bludgeoning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Bludgeoning"/>
                        <ToggleButton Grid.Row="0" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Cold}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Cold"/>
                        <ToggleButton Grid.Row="0" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Fire}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Fire"/>
                        <ToggleButton Grid.Row="0" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Force}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Force"/>
                        <ToggleButton Grid.Row="1" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Lightning}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Lightning"/>
                        <ToggleButton Grid.Row="1" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Necrotic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Necrotic"/>
                        <ToggleButton Grid.Row="1" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Piercing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Piercing"/>
                        <ToggleButton Grid.Row="1" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Poison}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Poison"/>
                        <ToggleButton Grid.Row="1" Grid.Column="4"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Psychic}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Psychic"/>
                        <ToggleButton Grid.Row="2" Grid.Column="0"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Radiant}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Radiant"/>
                        <ToggleButton Grid.Row="2" Grid.Column="1"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Slashing}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Slashing"/>
                        <ToggleButton Grid.Row="2" Grid.Column="2"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.Thunder}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Thunder"/>
                        <ToggleButton Grid.Row="2" Grid.Column="3"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.NonSilveredPhysical}"
                                  x:DefaultBindMode="TwoWay"
                                  Content="Non-Silvered Physical"/>
                        <ToggleButton Grid.Row="2" Grid.Column="4"
                                  Content="Non-Magical Physical"
                                  x:DefaultBindMode="TwoWay"
                                  IsChecked="{x:Bind ViewModel.Vulnerabilities.NonMagicalPhysical}"/>
                    </VariableSizedWrapGrid>
                </Expander>
                <Expander
                          Margin="5"
                     HorizontalAlignment="Stretch">
                    <Expander.Header>
                        <StackPanel>
                            <TextBlock Margin="2"
                                       Text="Condition Immunities:"/>
                            <TextBlock Margin="2"
                                       Text="{x:Bind ViewModel.ConditionImmunities.EnumString, Mode=OneWay}"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <VariableSizedWrapGrid MaximumRowsOrColumns="5"
                                               ItemWidth="200"
                                               Orientation="Horizontal">
                            <ToggleButton Content="Blinded"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Blinded, Mode=TwoWay}"/>
                            <ToggleButton Content="Charmed"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Charmed, Mode=TwoWay}"/>
                            <ToggleButton Content="Deafened"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Deafened, Mode=TwoWay}"/>
                            <ToggleButton Content="Frightened"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Frightened, Mode=TwoWay}"/>
                            <ToggleButton Content="Grappled"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Grappled, Mode=TwoWay}"/>
                            <ToggleButton Content="Incapacitated"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Incapacitated, Mode=TwoWay}"/>
                            <ToggleButton Content="Paralyzed"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Paralyzed, Mode=TwoWay}"/>
                            <ToggleButton Content="Petrified"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Petrified, Mode=TwoWay}"/>
                            <ToggleButton Content="Poisoned"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Poisoned, Mode=TwoWay}"/>
                            <ToggleButton Content="Prone"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Prone, Mode=TwoWay}"/>
                            <ToggleButton Content="Restrained"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Restrained, Mode=TwoWay}"/>
                            <ToggleButton Content="Stunned"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Stunned, Mode=TwoWay}"/>
                            <ToggleButton Content="Unconscious"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Unconscious, Mode=TwoWay}"/>
                                <ToggleButton Content="Exhausted"
                                  Margin="2,2,2,2"
                                  IsChecked="{x:Bind ViewModel.ConditionImmunities.Exhausted, Mode=TwoWay}"/>
                        </VariableSizedWrapGrid>
                    </Expander.Content>
                </Expander>
                <TextBox Margin="2"
                         Header="Number of Attacks Description:"
                         Text="{x:Bind ViewModel.Creature.AttackDescription, Mode=TwoWay}"/>
                <ListView Margin="2"
                          ui:ListViewExtensions.AlternateColor="Aqua"
                          ItemsSource="{x:Bind ViewModel.CreatureAbilities}"
                          SelectionMode="None">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid MaxHeight="100">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="Edit" Command="{Binding EditAbilityRequestedCommand}"/>
                                        <MenuFlyoutItem Text="Delete" Command="{Binding DeleteAbilityRequestedCommand}"/>
                                    </MenuFlyout>
                                </Grid.ContextFlyout>
                                <!--TODO: proper formatting for the ability area to show all relevant information-->

                                <TextBlock Margin="2"
                                           Grid.Column="0"
                                        Text="{Binding Ability.Name}"/>
                                <TextBlock Margin="2"
                                           Grid.Column="1"
                                           Text="{Binding Ability.DamageTypes}"/>
                                <ScrollViewer Margin="2"
                                           Grid.Column="2">
                                <TextBlock 
                                           Text="{Binding Ability.EffectDescription}"
                                            TextWrapping="Wrap"/>
                                </ScrollViewer>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Button Content="Add New Ability"
                        Command="{x:Bind ViewModel.AddCreatureAbilityCommand}"
                        Margin="2"/>
                <Expander Header="Spells"
                          HorizontalAlignment="Stretch"
                          Margin="5">
                    <Expander.Content>
                        <local:SpellGrid
                            FilterSpellLevelSource="{x:Bind ViewModel.SpellLevels}"
                            FilterMinimumSpellLevel="{x:Bind ViewModel.MinimumSpellLeveLFilter, Mode=TwoWay}"
                            FilterMaximumSpellLevel="{x:Bind ViewModel.MaximumSpellLevelFilter, Mode=TwoWay}"
                            FilterSpellSchoolSource="{x:Bind ViewModel.MagicSchools}"
                            FilterSpellSchoolSelected="{x:Bind ViewModel.SpellSchoolFilterSelected, Mode=TwoWay}"
                            FilterConcentrationSource="{x:Bind ViewModel.ConcentrationStates}" 
                            FilterConcentrationSelected="{x:Bind ViewModel.ConcentrationFilterSelected, Mode=TwoWay}"
                            FilterResolutionSource="{x:Bind ViewModel.ResolutionTypes}"
                            FilterResolutionSelected="{x:Bind ViewModel.ResolutionTypeFilterSelected, Mode=TwoWay}"
                            FilterDamageTypeSource="{x:Bind ViewModel.DamageTypes}"
                            FilterDamageTypeSelected="{x:Bind ViewModel.DamageTypeFilterSelected, Mode=TwoWay}"
                            Suggestions="{x:Bind ViewModel.SearchSuggestions, Mode=OneWay}"
                            FilterCommand="{x:Bind ViewModel.AbilityFilterCommand}"
                            SearchTextChangeCommand="{x:Bind ViewModel.SearchTextChangeCommand}"
                            GridDataSource="{x:Bind ViewModel.Spells}"
                            SortCommand="{x:Bind ViewModel.DataGridSortCommand}"
                            EditSpellCommand="{x:Bind ViewModel.EditAbilityCommand}"
                            AddSpellCommand="{x:Bind ViewModel.AddAbilityCommand}"
                            />
                    </Expander.Content>
                </Expander>
                
                <ScrollViewer>
                    <TextBox Header="Other Features"
                             PlaceholderText="Enter Features"
                             ToolTipService.ToolTip="Other features the creature may have, like Devil Sight or Magic Resistance"
                             TextWrapping="Wrap"
                             Text="{x:Bind ViewModel.Creature.Features, Mode=TwoWay}"/>
                </ScrollViewer>
                <ScrollViewer>
                    <TextBox Header="Description"
                                 PlaceholderText="Enter a description"
                                 Text="{x:Bind ViewModel.Creature.Description, Mode=TwoWay}"/>
                </ScrollViewer>
            </StackPanel>
        </ScrollViewer>
        <Button HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{x:Bind ViewModel.CommitChangesCommand}">
            <FontIcon Glyph="&#xF16C;"></FontIcon>
        </Button>
    </Grid>
</Page>
